# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  pull_request:
  push:
    tags:       
      - v1.*
  issue_comment:

permissions:
  pull-requests: read
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dynamic_env: ${{ steps.dynamic_env_step.outputs.DYNAMIC_ENV }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Run script
      run: |
        chmod +x ./script.sh
        echo "${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}"
        echo '${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}'
        ./script.sh '${{ secrets.SEC_ONE }}' '${{ vars.VAR_ONE}}'
        echo "============================"
        ./script.sh ${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}
        echo "--------------------------------"
        echo "::add-mask::${{ vars.VAR_ONE}}"
        echo "TESTENV_VAR=${{ vars.VAR_ONE}}" >> $GITHUB_ENV
        echo "${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}"
        echo '${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}'
        ./script.sh '${{ secrets.SEC_ONE }}' '${{ vars.VAR_ONE}}'
        echo "============================"
        ./script.sh ${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}
    - name: Test Env
      id: dynamic_env_step
      run: |
        echo $TESTENV_VAR
        echo "${{ vars.VAR_ONE}}"
        echo "DYNAMIC_ENV=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        

  nextjob:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: |
           echo "${{ needs.build.outputs.dynamic_env}}"
           echo "${{ env.DYNAMIC_ENV }}"
      
        
