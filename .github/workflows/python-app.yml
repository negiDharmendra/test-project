# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  pull_request:
  push:
    tags:       
      - v1.*
  issue_comment:

permissions:
  pull-requests: read
  contents: read
jobs:
  job_detail:
    runs-on: ubuntu-latest
    outputs:
      BRANCH: ${{steps.load-pr.outputs.branch }}
      VERSION: ${{steps.load-pr.outputs.version || steps.tag-load.outputs.version }}
    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Echo data
      run: |
        echo "github.ref ==> ${{github.ref}}"
        echo "github.ref_name ====> ${{github.ref_name}}"
        echo "github.head_ref ====> ${{github.head_ref}}"
        echo "github.ref_type ====> ${{github.ref_type}}"
        echo "github.event.pull_request.url ====> ${{github.event.pull_request.url}}"
        echo "github.event.pull_request.comments_url  ====> ${{github.event.pull_request.comments_url }}"
        echo "github.event_name ====> ${{github.event_name}}"
        echo "github.event.comment.body  ====> ${{github.event.comment.body }}"
        echo "github.event.comment.issue_url  ====> ${{github.event.comment.issue_url }}"
        echo "github.event.comment.html_url  ====> ${{github.event.comment.html_url }}"
        echo " github.event.issue.pull_request.url  ====> ${{ github.event.issue.pull_request.url }}"
    - id: load-pr
      if: ${{ github.event_name == 'issue_comment' }}
      run: |
        response=$(curl -sSf --url ${{ github.event.issue.pull_request.url }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'  --header 'content-type: application/json')
        branch=$(python3 -c "import sys, json; print(json.load(sys.stdin)['head']['ref'])" <<< "$response")
        version=$(echo ${{github.event.comment.body}} | cut -d ' ' -f 2 )
        echo "::set-output name=branch::$branch"
        echo "::set-output name=version::$version"
    - id: tag-load
      if: ${{ github.event_name != 'issue_comment' }}
      run: |
        version=$(echo ${{github.ref_name}} | sed s/v// )
        echo "::set-output name=version::$version"
  build:

    runs-on: ubuntu-latest
    needs: job_detail
    steps:
    - name: Echo data
      run: |
        echo ${{needs.job_detail.outputs.VERSION}}
    - uses: actions/checkout@v3
      if: github.event_name == 'issue_comment'
      with:
        ref: ${{ needs.job_detail.outputs.BRANCH }}
    - uses: actions/checkout@v3
      if: ${{ github.event_name != 'issue_comment' }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Run script
      run: |
        chmod +x ./script.sh
        echo "${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}"
        echo '${{ secrets.SEC_ONE }} ${{ vars.VAR_ONE}}'
        ./script.sh '${{ secrets.SEC_ONE }}' '${{ vars.VAR_ONE}}'
    
